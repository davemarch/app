{"version":3,"sources":["logo.png","jan2010_USA_poster.jpg","nov2010_UK_poster.png","sept2010_UK_poster.jpg","jan2020_EUROPE_poster.jpg","components/navbar/navbar.js","components/header/header.js","components/main/main.js","components/tourpage/tourpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","id","className","onClick","e","currentTarget","parentElement","classList","toggle","i","year_list","menu_list","menu","length","includes","year","push","href","closest","console","log","menuItems","to","src","logo","Header","heading","Main","handleToUpdate","tour_list","value","database","key","link","title","mapThru","TourPage","poster","date_list","tours","dates","venue","location","App","someArg","setState","state","date","jan2010_USA_poster","sept2010_UK_poster","nov2010_UK_poster","jan2020_EUROPE_poster","this","class","variant","path","component","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba8cf95a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c2de8131.png\";","module.exports = __webpack_public_path__ + \"static/media/jan2010_USA_poster.28ab2939.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nov2010_UK_poster.1bbce4a4.png\";","module.exports = __webpack_public_path__ + \"static/media/sept2010_UK_poster.633d3d6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jan2020_EUROPE_poster.9fdf5077.jpg\";","import React from 'react';\nimport './navbar.css';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst NavBar = (props) => {\n\n  // console.log(props.menu.length)\n\n  let menuItems = (props) => {\n\n    var i = 0;\n    let year_list = [];\n    let menu_list = [];\n\n    for (i = 0; i < props.menu.length; ++i){\n      if (year_list.includes(props.menu[i].year) === false) {\n    year_list.push(props.menu[i].year)\n    menu_list.push(\n    <li>\n      <Link>\n        <a href={`#`} onClick={function(e){e.currentTarget.closest('nav').classList.toggle('active');}}>{props.menu[i].year}</a>\n        </Link></li>\n      )\n    } }\n  console.log(year_list)\n  return <>{menu_list}</>\n  }\n\n\n \n\n\n    return (\n    <nav id=\"navbar\" className='navbar test'>\n    <button className=\"burgerIcon\" onClick={function(e){e.currentTarget.parentElement.classList.toggle('active');}}><span className=\"line\"></span></button>   \n    <ul>\n    {menuItems(props)}\n    </ul>\n    <Link to='/app'>\n    <a href='/app' id='logo-container'><img id=\"logo\" src={props.logo}/> </a>\n    </Link>\n\n\n    </nav>\n    )\n};\n\n\nexport default NavBar;","import React from 'react';\nimport './header.css';\nimport NavBar from \"../navbar/navbar.js\";\n\n\nconst Header = (props) => {\n    return (\n    <header id=\"headerWrap\">\n        <span id=\"header\">\n        {props.heading}\n        </span>\n        <NavBar logo = {props.logo}  menu = {props.menu} />\n    </header>\n    )\n};\n\n\nexport default Header;","import React from 'react';\nimport './main.css';\nimport { Link } from \"react-router-dom\";\nimport { useState } from 'react';\n\n\n\nconst Main = (props) => {\n\n\n\n        let mapThru = (props) => {\n\n            var\thandleToUpdate\t=\tprops.handleToUpdate;\n\n    \n\n\n        let i = 0;\n        let tour_list = [];\n        \n        for (i = 0; i < props.database.length; ++i){\n        let value = props.database[i].key;\n        tour_list.push(\n            <div>\n                <Link \n                to={props.database[i].link}\n                >         \n                    <h2 onClick={() => handleToUpdate(value)}>{props.database[i].title}</h2>\n                </Link>\n            </div>\n            )\n        }\n\n        return <div>\n        <h1>{props.database[i]} </h1>\n        {tour_list}\n        </div> \n    }\n\n\n        return (\n        <div id=\"main\">\n            {mapThru(props)}\n        </div>\n        );\n}\n\nexport default Main;","import React from 'react';\nimport './tourpage.css';\n\n\n\nconst TourPage = (props) => {\n\n    // console.log(props.tours[props.i])\n\n\n    let mapThru = (props) => {\n\n        var i = 0;\n        var date_list = [];\n\n\n        for (i = 0; i < props.tours[props.i].dates.length; ++i){\n            date_list.push(\n                <tr>\n                    <td>{props.tours[props.i].dates[i]}</td>\n                    <td>{props.tours[props.i].venue[i]}</td>\n                    <td>{props.tours[props.i].location[i]}</td>\n                </tr>\n            )\n        }\n        return <div>\n                <tr>\n                <th>Date</th>\n                <th>Venue</th>\n                <th>Town/City</th>\n            </tr>\n            {date_list}\n        </div>\n\n    }\n\n    \n\n    return (\n    <div id=\"tourpage\">\n        <p>{props.title}</p>\n        <img id = 'poster' src={props.poster}/>\n        <table>\n            {mapThru(props)}\n        </table>\n    </div>\n    )\n};\n\n\nexport default TourPage;","import React, { Component } from 'react';\nimport logo from './logo.png';\nimport jan2010_USA_poster from './jan2010_USA_poster.jpg';\nimport nov2010_UK_poster from './nov2010_UK_poster.png';\nimport sept2010_UK_poster from './sept2010_UK_poster.jpg';\nimport jan2020_EUROPE_poster from './jan2020_EUROPE_poster.jpg';\nimport Header from './components/header/header.js'\nimport Main from './components/main/main.js'\nimport './App.css';\nimport TourPage from './components/tourpage/tourpage.js';\nimport { Link } from \"react-router-dom\";\nimport {\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  handleToUpdate = (someArg) => {\n    this.setState(state => ({\n      i: someArg\n    }));}\n\n  state = {\n    i : 0,\n    Header : { heading : <span>'Show Database'</span>,\n                logo : logo,\n                menu : ['']},\n    Main : [\n        {key: 0, year: [\"2010\"] , tours: ['tour a', 'tour b', 'tour c', 'extra'] , date: ['tour a - first date', 'tour b - first date', 'tour c - first day']},\n\n    ],\n    tours : [\n      {key : 0,\n        title : 'Spring 2010 - USA',\n        year : '2010',\n        poster : jan2010_USA_poster,\n        link : '/tourpage',\n        dates : ['January 12th 2010', 'January 13th 2010','January 14th 2010','January 15th 2010','January 16th 2010','February 6th 2010',],\n        venue : ['The Magic Stick', 'Bottom Lounge', 'Station 4', 'Sokol Underground', 'Cervantes Masterpiece Ballroom', 'Mr Smalls'],\n        location : ['Detroit, MI', 'Chicago, IL', 'St Paul, MN', 'Omaha, NE', 'Denver, CO', 'Pittsbury, PA']\n        },\n      {key : 1,\n        title : 'Fall 2010 - USA',\n        year : '2010',\n        poster : sept2010_UK_poster,\n        link : \"/tourpage\",\n        dates : ['September 21st 2010', 'September 22nd 2010', 'September 23rd 2010','September 24th 2010','September 25th 2010','September 26th 2010','September 27th 2010'],\n        venue : ['Ottobar', 'The Bell House', 'The Met Cafe','Le Studio','Imperial','Ritual Nightclub','Time to Laugh'],\n        location : ['Baltimore, MA', 'Brooklyn, NY', 'Pawtucket, RI', 'Montreal, Quebec', 'Quebec, Quebec', 'Ottawa, Ontario', 'Kingston','Ontario']\n        },\n        {key : 2,\n          title : 'Fall 2010 - UK',\n          year : '2010',\n          poster : nov2010_UK_poster,\n          link : '/tourpage',\n          dates : ['November 11th 2010', 'November 12th 2010', 'November 13th 2010','November 14th 2010','November 15th 2010','November 16th 2010','November 17th 2010', 'November 18th 2010', 'November 19th 2010', 'November 20th 2010'],\n          venue : ['The Fighting Cocks', 'Unit', 'Sigma','The Croft','Tiger Lounge','13th Note','Northumberland Arms','The Bell Hotel','Club Revolution','Old Blue Last'],\n          location : ['Kingston', 'Southampton', 'Swansea', 'Bristol', 'Manchester', 'Glasgow', 'Newcastle','Derby','Peterborough','London']\n          },\n        {key : 3,\n          title : 'Winter 2020 - Europe',\n          year : '2020',\n          poster : jan2020_EUROPE_poster,\n          link : \"/tourpage\",\n          dates : ['January 25th 2020', 'January 26th 2020', 'January 28th 2020', 'January 29th 2020', 'January 30th 2020', 'January 31st 2020', 'February 1st 2020', 'February 3rd 2020', 'February 4th 2020', 'February 6th 2020', 'February 7th 2020', 'February 8th 2020', 'February 10th 2020', 'February 11th 2020', 'February 12th 2020', 'February 14th 2020', 'February 15th 2020'],\n          venue : ['Gruespan', 'Bi Nuu', 'WuK', 'Dynamo', 'Universum', 'Technikum', 'Kantine', 'Melkweg', 'Zappa', 'Engine Rooms', 'SWX', 'Albert Hall', 'Whelans', 'QMU', 'The Riverside','The Asylum','O2 Forum Kentish Town'],\n          location : ['Hamburg, Germany', 'Berlin, Germany', 'Vienna, Austria', 'Zurich, Germany', 'Stuttgart, Germany', 'Munich, Germany', 'Cologne, Germany', 'Amsterdam, Netherlands', 'Antwerp, Belgium','Southampton, UK', 'Bristol, UK' ,'Manchester, UK', 'Dublin, Ireland', 'Glasgow, UK', 'Newcastle, UK', 'Birmingham, UK', 'London, UK']\n          }\n    ]\n  }\n\n\n\n  render() {\n\n    return (\n      \n      <div className=\"App\">\n        <Header \n          heading = {this.state.Header.heading} \n          logo = {this.state.Header.logo}\n          menu = {this.state.tours}\n          />\n        <Link to='/main'>\n        <div class='link2'>\n        <button variant=\"outlined\">\n        Show Database\n        </button>\n        </div>\n        </Link>\n\n        <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n          <Route path='/tourpage' component={TourPage}>\n            <TourPage \n            i = {this.state.i}\n            tours = {this.state.tours}\n            title = {this.state.tours[this.state.i].title}\n            poster = {this.state.tours[this.state.i].poster}\n            date = {this.state.tours[this.state.i].dates}\n            venue = {this.state.tours[this.state.i].venue}\n            location ={this.state.tours[this.state.i].location}\n            />\n          </Route>\n          <Route path='/main' component={Main}>\n            <Main\n                handleToUpdate = {this.handleToUpdate}\n                i = {this.state.i}\n                menu = {this.state.Header.menu}\n                database = {this.state.tours}\n            >\n            </Main>\n          </Route>\n        </Switch>\n\n\n\n      </div>\n);\n\n    }}\n  \n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\nReactDOM.render((\n  <BrowserRouter>\n    <App /> {/* The various pages will be displayed by the `Main` component. */}\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}